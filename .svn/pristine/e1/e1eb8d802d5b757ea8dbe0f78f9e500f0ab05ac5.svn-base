package com.Wsdl2Code.WebServices.pqrdService;

import android.os.AsyncTask;

/**
 * Created by jgonzalez on 16/10/13.
 * http://smartphonebysachin.blogspot.com/2012/11/how-to-return-value-from-async-task-in.html
 */
public class registrarPqrAsync extends AsyncTask<Void, Void, Void> {
    private registroPQRDVO pqr = null;
    private respuestaRegistroVO pqrResp = null;

    private byte[] foto = null;
    private byte[] video = null;
    private archivoAdjuntoVO fotoA = null;
    private archivoAdjuntoVO videoA = null;

    public registroPQRDVO getPqr() {return pqr;}
    public void setPqr(registroPQRDVO pqr) { this.pqr = pqr;}
    public byte[] getFoto() { return foto;}
    public void setFoto(byte[] foto) {this.foto = foto;}
    public byte[] getVideo() {return video;}
    public void setVideo(byte[] video) {this.video = video;}
    public archivoAdjuntoVO getFotoA() {return fotoA;}
    public void setFotoA(archivoAdjuntoVO fotoA) {this.fotoA = fotoA;}
    public archivoAdjuntoVO getVideoA() {return videoA;}
    public void setVideoA(archivoAdjuntoVO videoA) {this.videoA = videoA;}
    public respuestaRegistroVO getPqrResp() {return pqrResp;}
    public void setPqrResp(respuestaRegistroVO pqrResp) {this.pqrResp = pqrResp;}

    @Override
    protected Void  doInBackground(Void... params) {
        if (onAsyncResult != null) {
            VectorByte fotoByte = null;
            VectorByte videoByte = null;

            if(foto != null) fotoByte = new VectorByte(foto);
            if(video != null) videoByte = new VectorByte(video);

            pqrdService client = new pqrdService();

            try
            {
                pqrResp = client.registrarPqr(pqr, videoA, videoByte, fotoA, fotoByte);
                if(pqrResp.numRadicado != 0L)
                    onAsyncResult.onResultSuccess(0, pqrResp.numRadicado + "-" + pqrResp.anno, pqrResp);
                else
                    onAsyncResult.onResultFail(1, pqrResp.mensajeError);

            }
            catch (Exception e)
            {
                e.printStackTrace();
                onAsyncResult.onResultFail(2, "Error no definido");
            }
        }
        return null;
    }

    protected void send() {

    }

    OnAsyncResult onAsyncResult;
    public void setOnResultListener(OnAsyncResult onAsyncResult) {
        if (onAsyncResult != null) {
            this.onAsyncResult = onAsyncResult;
        }
    }

    public interface OnAsyncResult {
        public abstract void onResultSuccess(int resultCode, String message, respuestaRegistroVO pqrResult);
        public abstract void onResultFail(int resultCode, String errorMessage);
    }

    protected void onProgressUpdate() {
    }

    protected void onPostExecute() {
    }
}
