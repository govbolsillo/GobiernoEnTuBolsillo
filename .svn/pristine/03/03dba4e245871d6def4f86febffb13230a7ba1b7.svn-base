package com.bpmco.tramitefacil.Database;

import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import com.bpmco.tramitefacil.DTO.Ciudadano;
import com.bpmco.tramitefacil.DTO.Elemento;
import com.bpmco.tramitefacil.DTO.Tramite;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by smarin on 2/10/13.
 */
public class DBHandlerElemento {


    private SQLiteDatabase db;
    private String _tabla;

    private static DBHandlerElemento instance = null;

    private static final String createTabla =
            "CREATE TABLE frm_trf_elemento " +
            "(eleId INTEGER PRIMARY KEY AUTOINCREMENT, traId TEXT, eleFormEleId TEXT, eleTipo TEXT, eleEtiqueta TEXT, eleOpciones TEXT" +
            ",eleRequerido TEXT, eleValidacion TEXT, elePagina INTEGER, eleOrden TEXT, opcGrupo TEXT" +
            ", eleParentId TEXT, eleParentType TEXT, eleParentValue TEXT)";

    private synchronized static void createInstance(SQLiteDatabase db, String tabla)
    {
        instance = new DBHandlerElemento(db,tabla);
    }

    public static DBHandlerElemento getInstance(SQLiteDatabase db, String tabla)
    {
        if(instance == null)
        {
            createInstance(db, tabla);
        }
        return instance;
    }

    private DBHandlerElemento(SQLiteDatabase db, String tabla)
    {
        this.db = db;
        this._tabla = tabla;
    }

    public void creartabla()
    {
        db.execSQL(createTabla);
        initData();
    }


    public void initData()
    {
        createElement("1","t","Lugar o Dirección en donde tiene el problema","NULL","1","AN","1","1","NULL","NULL","NULL","NULL");
        createElement("1","r","Barrio o Vereda","TLUG","1","NULL","1","2","NULL","NULL","NULL","NULL");
        createElement("1","s","Barrio","BAR","1","NULL","NULL","3","2","0","Barrio","NULL");
        createElement("1","t","Edad (años)","NULL","1","E","2","8","NULL","NULL","NULL","NULL");
        createElement("1","s","Edad (meses)","AMES","1","NULL","2","9","NULL","NULL","NULL","NULL");
        createElement("1","l","Información del Afectado","NULL","0","NULL","2","4","NULL","NULL","NULL","NULL");
        createElement("1","s","Tipo de Identificación","TD","1","NULL","2","5","NULL","NULL","NULL","NULL");
        createElement("1","t","No. de Identificación","NULL","1","E","2","6","NULL","NULL","NULL","NULL");
        createElement("1","t","Nombre del Afectado","NULL","1","A","2","7","NULL","NULL","NULL","NULL");
        createElement("1","s","Tipo Entidad Generadora de Queja","TGQ","TRUE","NULL","2","10","NULL","NULL","NULL","NULL");
        createElement("1","s","EPS","EPS","TRUE","NULL","NULL","11","10","0","EPS","NULL");
        createElement("1","s","IPS","IPS","TRUE","NULL","NULL","12","10","0","IPS","NULL");
        createElement("1","t","Nombre Entidad Generadora de Queja","NULL","TRUE","AN","NULL","13","10","0","OTRA","NULL");
        createElement("1","s","Clasifique su Queja de Salud","TQSAL","TRUE","NULL","3","14","NULL","NULL","NULL","NULL");
        createElement("1","r","Desea incluir una foto?","SN","TRUE","NULL","3","16","NULL","NULL","NULL","NULL");
        createElement("1","f","Foto","NULL","TRUE","NULL","3","17","19","0","SI","NULL");
        createElement("1","r","Desea incluir un video?","SN","TRUE","NULL","3","18","NULL","NULL","NULL","NULL");
        createElement("1","v","Video","NULL","TRUE","NULL","3","19","21","0","SI","NULL");
        createElement("1","t","Motivo de la Solicitud","NULL","TRUE","AN","3","15","NULL","NULL","NULL","NULL");


    }


    public String createElement(String traId, String eleTipo, String eleEtiqueta
            , String opcGrupo, String eleRequerido, String eleValidacion, String elePagina
            , String eleOrden, String eleParentId, String eleParentType, String eleParentValue
            , String eleFormEleId)
    {
        Integer errors = 0;

            long id = 0;
            try
            {
                this.db.beginTransaction();

                ContentValues values = new ContentValues();
                values.put("traId", traId);
                values.put("eleFormEleId", eleFormEleId);
                values.put("eleTipo", eleTipo);
                values.put("eleEtiqueta", eleEtiqueta);
                values.put("eleRequerido", eleRequerido);
                values.put("eleValidacion", eleValidacion);
                values.put("elePagina", (elePagina.equals("NULL")?null:elePagina));
                values.put("eleOrden", eleOrden);

                values.put("eleParentId", eleParentId);
                values.put("eleParentType", eleParentType);
                values.put("eleParentValue", eleParentValue);
                values.put("opcGrupo", opcGrupo);

                id = this.db.insert(this._tabla, null, values);
                this.db.setTransactionSuccessful();
                this.db.endTransaction();
            }
            catch(Exception ex)
            {
               return "-1";
            }


        if(errors > 0)
        {
            return "-1";
        }

        return String.valueOf(id);
    }

    public String createOpciones()
    {
        return "";
    }

    public List<Elemento> getElementos(String pagina, String idTramite)
    {
        return getElementos(pagina, idTramite, null);
    }

    public List<Elemento> getElementos(String pagina, String idTramite, String idRegistro)
    {
        List<Elemento> listaElementos  = new ArrayList<Elemento>();
        String selectQuery =
                "SELECT e.eleId,e.traId,e.eleFormEleId,e.eleTipo,e.eleEtiqueta,e.eleOpciones,e.eleRequerido,e.eleValidacion" +
                        ",e.elePagina,e.eleOrden,e.opcGrupo ";

        /*
        //TODO: Esto no funciona
        if(idRegistro == null)
        {
            selectQuery += "LEFT JOIN frm_trf_elementoOpcion r ON e.opcGrupo = r.opcGrupo";
        }
        */

        if(idRegistro != null)
            selectQuery += ",r.resValor ";

        selectQuery += "FROM " + this._tabla + " as e ";

        if(idRegistro != null)
            selectQuery += "LEFT JOIN frm_trf_elementoRespuesta r ON e.eleId = r.eleId AND r.regId = '" + idRegistro + "' ";

        selectQuery += "WHERE e.traId = '" + idTramite + "' ";

        if(pagina != "0")
            selectQuery += " AND e.elePagina = '" + pagina + "' ";

        selectQuery += "ORDER BY e.elePagina, e.eleOrden ";

        Cursor cursor = db.rawQuery(selectQuery, null);
        Elemento objElemento = null;
        if (cursor.moveToFirst()) {
            do {
                objElemento = new Elemento();
                objElemento.setId(cursor.getString(0));
                objElemento.setTramiteId(cursor.getString(1));
                objElemento.setFormId(cursor.getString(2));
                objElemento.setTipo(cursor.getString(3));
                objElemento.setEtiqueta(cursor.getString(4));
                objElemento.setOpciones(cursor.getString(5));
                objElemento.setRequerido(cursor.getString(6));
                objElemento.setValidacion(cursor.getString(7));
                objElemento.setPagina(cursor.getString(8));
                objElemento.setOrden(cursor.getString(9));
                objElemento.setGrupo(cursor.getString(10));
                if(idRegistro != null)
                    objElemento.setRepuesta(cursor.getString(11));
                else
                    objElemento.setRepuesta("");

                listaElementos.add(objElemento);
            } while (cursor.moveToNext());
        }
        return listaElementos;
    }

    public String getMaxPages(String traId)
    {
        String paginas = "0";
        String selectQuery = "SELECT max(elePagina) FROM frm_trf_elemento WHERE traId = " + traId;

        Cursor cursor = db.rawQuery(selectQuery, null);

        if (cursor.moveToFirst()) {
            paginas = cursor.getString(0);
        }

        return paginas;
    }

}
