package com.bpmco.tramitefacil.Database;

import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import com.bpmco.tramitefacil.DTO.Registro;

import java.sql.Date;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by smarin on 9/10/13.
 */
public class DBHandlerRegistro {

    private SQLiteDatabase db;
    private String _tabla;

    private static DBHandlerRegistro instance = null;

    private static final String createTablaRegistro = "CREATE TABLE frm_trf_registro (regId INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, traId TEXT, ciuId TEXT, regFecha DATE, regRadicacion TEXT, regInfo TEXT, regStatus TEXT)";

    private synchronized static void createInstance(SQLiteDatabase db, String tabla)
    {
        instance = new DBHandlerRegistro(db,tabla);
    }

    public static DBHandlerRegistro getInstance(SQLiteDatabase db, String tabla)
    {
        if(instance == null)
        {
            createInstance(db, tabla);
        }
        return instance;
    }

    private DBHandlerRegistro(SQLiteDatabase db, String tabla)
    {
        this.db = db;
        this._tabla = tabla;
    }

    public void creartabla()
    {
        db.execSQL(createTablaRegistro);
    }

    public boolean createRegistro(Registro registro)
    {
        long id = 0;
        try
        {
            this.db.beginTransaction();
            ContentValues values = new ContentValues();
            values.put("regId", registro.getId());
            values.put("traId", registro.getTraId());
            values.put("ciuId", registro.getCiuId());
            values.put("regFecha", String.valueOf(registro.getFecha()));
            values.put("regRadicacion", registro.getRadicacion());
            values.put("regInfo", registro.getInfo());
            values.put("regStatus", registro.getStatus());

            id = this.db.insert(this._tabla, null, values);
            this.db.setTransactionSuccessful();
            this.db.endTransaction();
        }
        catch(Exception ex)
        {
            return false;
        }
        return true;
    }

    /*
    public List<Elemento> getElementos(String pagina, String idTramite)
    {
        List<Elemento> listaElementos  = new ArrayList<Elemento>();
        String selectQuery = "SELECT eleId,traId,eleFormEleId,eleTipo,eleEtiqueta,eleOpciones,eleRequerido,eleValidacion,elePagina,eleOrden WHERE elePagina = '" + pagina + "' AND traId = '" + idTramite + "' FROM " + this._tabla + " Order by eleOrden";
        Cursor cursor = db.rawQuery(selectQuery, null);
        Elemento objElemento = null;
        if (cursor.moveToFirst()) {
            do {
                objElemento = new Elemento();
                objElemento.setId(cursor.getString(0));
                objElemento.setTramiteId(cursor.getString(1));
                objElemento.setFormId(cursor.getString(2));
                objElemento.setTipo(cursor.getString(3));
                objElemento.setEtiqueta(cursor.getString(4));
                objElemento.setOpciones(cursor.getString(5));
                objElemento.setRequerido(cursor.getString(6));
                objElemento.setValidacion(cursor.getString(7));
                objElemento.setPagina(cursor.getString(8));
                objElemento.setOrden(cursor.getString(9));

                listaElementos.add(objElemento);
            } while (cursor.moveToNext());
        }
        return listaElementos;
    }*/
}
