package com.Wsdl2Code.WebServices.pqrdService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 10/3/2013 4:21:41 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import com.Wsdl2Code.WebServices.pqrdService.WS_Enums.*;
import java.util.List;
import org.ksoap2.SoapEnvelope;
import org.ksoap2.SoapFault;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;
import org.ksoap2.HeaderProperty;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;
import android.os.AsyncTask;
import org.ksoap2.serialization.MarshalFloat;

public class pqrdService {
    
    public String NAMESPACE ="http://servicios/";
    public String url="http://199.89.53.54:8080/pqrdService/pqrdService";
    public int timeOut = 60000;
    public IWsdl2CodeEvents eventHandler;
    public SoapProtocolVersion soapVersion;
    
    public pqrdService(){}
    
    public pqrdService(IWsdl2CodeEvents eventHandler)
    {
        this.eventHandler = eventHandler;
    }
    public pqrdService(IWsdl2CodeEvents eventHandler,String url)
    {
        this.eventHandler = eventHandler;
        this.url = url;
    }
    public pqrdService(IWsdl2CodeEvents eventHandler,String url,int timeOutInSeconds)
    {
        this.eventHandler = eventHandler;
        this.url = url;
        this.setTimeOut(timeOutInSeconds);
    }
    public void setTimeOut(int seconds){
        this.timeOut = seconds * 1000;
    }
    public void setUrl(String url){
        this.url = url;
    }
    public void registrarPqrAsync(registroPQRDVO registroPQRD,archivoAdjuntoVO video,VectorByte dataVideo,archivoAdjuntoVO foto,VectorByte dataFoto) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        registrarPqrAsync(registroPQRD, video, dataVideo, foto, dataFoto, null);
    }
    
    public void registrarPqrAsync(final registroPQRDVO registroPQRD,final archivoAdjuntoVO video,final VectorByte dataVideo,final archivoAdjuntoVO foto,final VectorByte dataFoto,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, respuestaRegistroVO>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected respuestaRegistroVO doInBackground(Void... params) {
                return registrarPqr(registroPQRD, video, dataVideo, foto, dataFoto, headers);
            }
            @Override
            protected void onPostExecute(respuestaRegistroVO result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("registrarPqr", result);
                }
        }
        }.execute();
    }
    
    public respuestaRegistroVO registrarPqr(registroPQRDVO registroPQRD,archivoAdjuntoVO video,VectorByte dataVideo,archivoAdjuntoVO foto,VectorByte dataFoto){
        return registrarPqr(registroPQRD, video, dataVideo, foto, dataFoto, null);
    }
    
    public respuestaRegistroVO registrarPqr(registroPQRDVO registroPQRD,archivoAdjuntoVO video,VectorByte dataVideo,archivoAdjuntoVO foto,VectorByte dataFoto,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = false;
        SoapObject soapReq = new SoapObject("http://servicios/","registrarPqr");
        soapEnvelope.addMapping("http://servicios/","registroPQRD",new registroPQRDVO().getClass());
        soapEnvelope.addMapping("http://servicios/","video",new archivoAdjuntoVO().getClass());
        soapEnvelope.addMapping("http://servicios/","foto",new archivoAdjuntoVO().getClass());
        soapReq.addProperty("registroPQRD",registroPQRD);
        soapReq.addProperty("video",video);
        if(dataVideo != null)
            soapReq.addProperty("dataVideo",dataVideo.toString());
        soapReq.addProperty("foto",foto);
        if(dataFoto != null)
            soapReq.addProperty("dataFoto",dataFoto.toString());
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        httpTransport.debug = true;
        try{
            if (headers!=null){
                httpTransport.call("http://servicios/pqrdService/registrarPqrRequest", soapEnvelope,headers);
            }else{
                httpTransport.call("http://servicios/pqrdService/registrarPqrRequest", soapEnvelope);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    respuestaRegistroVO resultVariable =  new respuestaRegistroVO (j);
                    return resultVariable;
                    
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
    public void getRespuestasPQRDAsync(long numSolicitud,boolean numSolicitudSpecified,int vigencia,boolean vigenciaSpecified) throws Exception{
        if (this.eventHandler == null)
            throw new Exception("Async Methods Requires IWsdl2CodeEvents");
        getRespuestasPQRDAsync(numSolicitud, numSolicitudSpecified, vigencia, vigenciaSpecified, null);
    }
    
    public void getRespuestasPQRDAsync(final long numSolicitud,final boolean numSolicitudSpecified,final int vigencia,final boolean vigenciaSpecified,final List<HeaderProperty> headers) throws Exception{
        
        new AsyncTask<Void, Void, VectorrespuestaProcesoVO>(){
            @Override
            protected void onPreExecute() {
                eventHandler.Wsdl2CodeStartedRequest();
            };
            @Override
            protected VectorrespuestaProcesoVO doInBackground(Void... params) {
                return getRespuestasPQRD(numSolicitud, numSolicitudSpecified, vigencia, vigenciaSpecified, headers);
            }
            @Override
            protected void onPostExecute(VectorrespuestaProcesoVO result)
            {
                eventHandler.Wsdl2CodeEndedRequest();
                if (result != null){
                    eventHandler.Wsdl2CodeFinished("getRespuestasPQRD", result);
                }
            }
        }.execute();
    }
    
    public VectorrespuestaProcesoVO getRespuestasPQRD(long numSolicitud,boolean numSolicitudSpecified,int vigencia,boolean vigenciaSpecified){
        return getRespuestasPQRD(numSolicitud, numSolicitudSpecified, vigencia, vigenciaSpecified, null);
    }
    
    public VectorrespuestaProcesoVO getRespuestasPQRD(long numSolicitud,boolean numSolicitudSpecified,int vigencia,boolean vigenciaSpecified,List<HeaderProperty> headers){
        SoapSerializationEnvelope soapEnvelope = new SoapSerializationEnvelope(SoapEnvelope.VER11);
        soapEnvelope.implicitTypes = true;
        soapEnvelope.dotNet = false;
        SoapObject soapReq = new SoapObject("http://servicios/","getRespuestasPQRD");
        soapReq.addProperty("numSolicitud",numSolicitud);
        soapReq.addProperty("numSolicitudSpecified",numSolicitudSpecified);
        soapReq.addProperty("vigencia",vigencia);
        soapReq.addProperty("vigenciaSpecified",vigenciaSpecified);
        soapEnvelope.setOutputSoapObject(soapReq);
        HttpTransportSE httpTransport = new HttpTransportSE(url,timeOut);
        httpTransport.debug = true;
        try{
            if (headers!=null){
                httpTransport.call("http://servicios/pqrdService/getRespuestasPQRDRequest", soapEnvelope,headers);
            }else{
                httpTransport.call("http://servicios/pqrdService/getRespuestasPQRDRequest", soapEnvelope);
                // Logging the raw request and response (for debugging purposes)
                //Log.d(TAG, "HTTP REQUEST:\n" + httpTransport.requestDump);
                //Log.d(TAG, "HTTP RESPONSE:\n" + httpTransport.responseDump);
            }
            Object retObj = soapEnvelope.bodyIn;
            if (retObj instanceof SoapFault){
                SoapFault fault = (SoapFault)retObj;
                Exception ex = new Exception(fault.faultstring);
                if (eventHandler != null)
                    eventHandler.Wsdl2CodeFinishedWithException(ex);
            }else{
                SoapObject result=(SoapObject)retObj;
                if (result.getPropertyCount() > 0){
                    Object obj = result.getProperty(0);
                    SoapObject j = (SoapObject)obj;
                    VectorrespuestaProcesoVO resultVariable = new VectorrespuestaProcesoVO(j);
                    return resultVariable;
                }
            }
        }catch (Exception e) {
            if (eventHandler != null)
                eventHandler.Wsdl2CodeFinishedWithException(e);
            e.printStackTrace();
        }
        return null;
    }
    
}
