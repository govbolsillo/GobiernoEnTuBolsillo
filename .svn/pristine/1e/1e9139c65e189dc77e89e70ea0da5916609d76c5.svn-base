package com.datosabiertoscolombia.WS;

import android.os.AsyncTask;

import com.bpmco.tramitefacil.DTO.ElementoOpcion;
import com.bpmco.tramitefacil.Database.DatabaseHandler;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by jgonzalez on 15/12/13.
 */
public class EPSIPSAsync extends AsyncTask<Void, Void, Void> {

    public interface OnAsyncResult {
        public abstract void onResultSuccess(int resultCode, String message);
        public abstract void onResultFail(int resultCode, String message);
    }

    OnAsyncResult onAsyncResult;
    public void setOnResultListener(OnAsyncResult onAsyncResult) {
        if (onAsyncResult != null) {
            this.onAsyncResult = onAsyncResult;
        }
    }

    @Override
    protected Void  doInBackground(Void... params) {
        if (onAsyncResult != null) {
            try
            {
                EPSIPS ei = new EPSIPS();
                List<com.datosabiertoscolombia.DTO.EPSIPS> lst = ei.sync();

                int i = 0;
                List<ElementoOpcion> opciones = new ArrayList<ElementoOpcion>();
                for (com.datosabiertoscolombia.DTO.EPSIPS item : lst)
                {
                    ElementoOpcion opcion = new ElementoOpcion();
                    opcion.setGrupo(item.getTipo());
                    opcion.setValor(item.getNombre());
                    opcion.setTexto(item.getNombre());

                    opcion.setOrden(i++);
                    opciones.add(opcion);
                }
                int recs = 0;
                if(lst.size()>0)
                {
                    DatabaseHandler dbHand = DatabaseHandler.getInstance();
                    dbHand.getHandlerElementoOpcion().delete("EPS");
                    dbHand.getHandlerElementoOpcion().delete("IPS");
                    recs = dbHand.getHandlerElementoOpcion().createOptions(opciones);
                }
                onAsyncResult.onResultSuccess(0, "EPS IPS:" + lst.size() + " db:" + recs);
            }
            catch (Exception e)
            {
                e.printStackTrace();
                onAsyncResult.onResultFail(2, "Error no definido");
            }
        }
        return null;
    }

    protected void onProgressUpdate() {
    }

    protected void onPostExecute() {
    }
}
