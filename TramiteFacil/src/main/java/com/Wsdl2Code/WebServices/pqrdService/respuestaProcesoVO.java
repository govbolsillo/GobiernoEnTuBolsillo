package com.Wsdl2Code.WebServices.pqrdService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 10/3/2013 4:21:41 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class respuestaProcesoVO implements KvmSerializable {
    
    public long consecutivo;
    public boolean consecutivoSpecified;
    public String descripcion;
    public String estadoTramite;
    public String fecRespuesta;
    public boolean fecRespuestaSpecified;
    public long id;
    public boolean idSpecified;
    public String mensajeError;
    public String numPaso;
    public long numSolicitud;
    public boolean numSolicitudSpecified;
    public String texRespuesta;
    public String vigencia;
    
    public respuestaProcesoVO(){}
    
    public respuestaProcesoVO(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("consecutivo"))
        {
            Object obj = soapObject.getProperty("consecutivo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                consecutivo = Long.parseLong(j.toString());
            }else if (obj!= null && obj instanceof Number){
                consecutivo = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("consecutivoSpecified"))
        {
            Object obj = soapObject.getProperty("consecutivoSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                consecutivoSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                consecutivoSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("descripcion"))
        {
            Object obj = soapObject.getProperty("descripcion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                descripcion = j.toString();
            }else if (obj!= null && obj instanceof String){
                descripcion = (String) obj;
            }
        }
        if (soapObject.hasProperty("estadoTramite"))
        {
            Object obj = soapObject.getProperty("estadoTramite");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                estadoTramite = j.toString();
            }else if (obj!= null && obj instanceof String){
                estadoTramite = (String) obj;
            }
        }
        if (soapObject.hasProperty("fecRespuesta"))
        {
            Object obj = soapObject.getProperty("fecRespuesta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fecRespuesta = j.toString();
            }else if (obj!= null && obj instanceof String){
                fecRespuesta = (String) obj;
            }
        }
        if (soapObject.hasProperty("fecRespuestaSpecified"))
        {
            Object obj = soapObject.getProperty("fecRespuestaSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                fecRespuestaSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                fecRespuestaSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Long.parseLong(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("idSpecified"))
        {
            Object obj = soapObject.getProperty("idSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                idSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                idSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("mensajeError"))
        {
            Object obj = soapObject.getProperty("mensajeError");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mensajeError = j.toString();
            }else if (obj!= null && obj instanceof String){
                mensajeError = (String) obj;
            }
        }
        if (soapObject.hasProperty("numPaso"))
        {
            Object obj = soapObject.getProperty("numPaso");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numPaso = j.toString();
            }else if (obj!= null && obj instanceof String){
                numPaso = (String) obj;
            }
        }
        if (soapObject.hasProperty("numSolicitud"))
        {
            Object obj = soapObject.getProperty("numSolicitud");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numSolicitud = Long.parseLong(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numSolicitud = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("numSolicitudSpecified"))
        {
            Object obj = soapObject.getProperty("numSolicitudSpecified");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numSolicitudSpecified = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                numSolicitudSpecified = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("texRespuesta"))
        {
            Object obj = soapObject.getProperty("texRespuesta");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                texRespuesta = j.toString();
            }else if (obj!= null && obj instanceof String){
                texRespuesta = (String) obj;
            }
        }
        if (soapObject.hasProperty("vigencia"))
        {
            Object obj = soapObject.getProperty("vigencia");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                vigencia = j.toString();
            }else if (obj!= null && obj instanceof String){
                vigencia = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return consecutivo;
            case 1:
                return consecutivoSpecified;
            case 2:
                return descripcion;
            case 3:
                return estadoTramite;
            case 4:
                return fecRespuesta;
            case 5:
                return fecRespuestaSpecified;
            case 6:
                return id;
            case 7:
                return idSpecified;
            case 8:
                return mensajeError;
            case 9:
                return numPaso;
            case 10:
                return numSolicitud;
            case 11:
                return numSolicitudSpecified;
            case 12:
                return texRespuesta;
            case 13:
                return vigencia;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 14;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = Long.class;
                info.name = "consecutivo";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "consecutivoSpecified";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "descripcion";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "estadoTramite";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "fecRespuesta";
                break;
            case 5:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "fecRespuestaSpecified";
                break;
            case 6:
                info.type = Long.class;
                info.name = "id";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "idSpecified";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "mensajeError";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "numPaso";
                break;
            case 10:
                info.type = Long.class;
                info.name = "numSolicitud";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "numSolicitudSpecified";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "texRespuesta";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "vigencia";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
